server:
  port: 8200
spring:
  application:
    name: concumer-service

  jackson:
    property-naming-strategy: CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES  #驼峰转下划线

  redis:
    host: localhost
    port: 6379
    password:
    jedis:
      pool:
        max-active: 8
        max-wait: 1ms
        min-idle: 1
        max-idle: 8
    timeout: 50000ms
    database: 0

  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672

  datasource:
    url: jdbc:mysql://192.168.1.22:3306/test1130?useUnicode=true&autoReconnect=true&failOverReadOnly=false&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver


  cloud:
    stream:
      bindings:
        input:
          destination: sendChannel
          group: queue1
          content-type: application/json
          binder: rabbit
            #(默认)消费者配置
          consumer:
            concurrency: 1 #初始/最少/空闲时 消费者数量。默认1
            max-attempts: 1                # 当消息消费失败时，尝试消费该消息的最大次数（消息消费失败后，发布者会重新投递）。默认3
#            backOffInitialInterval: 1000  # 消息消费失败后重试消费消息的初始化间隔时间。默认1s，即第一次重试消费会在1s后进行
#            backOffMultiplier: 2          # 相邻两次重试之间的间隔时间的倍数。默认2，即第二次是第一次间隔时间的2倍，第三次是第二次的2倍
#            backOffMaxInterval: 10000     # 下一次尝试重试的最大时间间隔，默认为10000ms，即10s。
#        output:
#          destination: ackChannel
      rabbit:
        bindings:
          input:
            consumer:
#              prefetch: 10000
              batch-size: 10000
              acknowledge-mode: manual       #应答模式none/manual/auto
              #exchangeType: fanout         #指定该主题的类型为广播模式
#              requeue-rejected: true        #是否支持重新放回队列   ***maxAttempts=1时，消息失败会重新放入队列
              auto-bind-dlq: true           #消费失败的消息放入dlq队列
              republish-to-dlq: true              #如果这个属性为true,消息会在header中带上异常信息。
#              republishToDlq: true
              #ttl: 20000                    # 默认不做限制，即无限。消息在队列中最大的存活时间。当消息滞留超过ttl时，会被当成消费失败消息，即会被转发到死信队列或丢弃.
              max-concurrency: 10             #最大的监听数
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8300/eureka

mybatis-plus:
  configuration:
    cache-enabled: true  #开启缓存
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #